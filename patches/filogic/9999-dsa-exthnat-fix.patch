--- a/arch/arm64/boot/dts/mediatek/mt7988a.dtsi	2025-06-28 21:30:09.731001441 +0800
+++ b/arch/arm64/boot/dts/mediatek/mt7988a.dtsi	2025-06-28 21:34:08.226001555 +0800
@@ -1002,10 +1002,9 @@
 			clocks = <&infracfg CLK_INFRA_PCIE_PIPE_P2>,
 				 <&infracfg CLK_INFRA_PCIE_GFMUX_TL_P2>,
 				 <&infracfg CLK_INFRA_PCIE_PERI_26M_CK_P2>,
-				 <&infracfg CLK_INFRA_133M_PCIE_CK_P2>,
-				 <&topckgen CLK_TOP_PEXTP_P2_SEL>;
+				 <&infracfg CLK_INFRA_133M_PCIE_CK_P2>;
 			clock-names = "pl_250m", "tl_26m", "peri_26m",
-				      "top_133m", "pextp_clk";
+				      "top_133m";
 			pinctrl-names = "default";
 			pinctrl-0 = <&pcie2_pins>;
 			phys = <&xphyu3port0 PHY_TYPE_PCIE>;
@@ -1044,10 +1043,9 @@
 			clocks = <&infracfg CLK_INFRA_PCIE_PIPE_P3>,
 				 <&infracfg CLK_INFRA_PCIE_GFMUX_TL_P3>,
 				 <&infracfg CLK_INFRA_PCIE_PERI_26M_CK_P3>,
-				 <&infracfg CLK_INFRA_133M_PCIE_CK_P3>,
-				 <&topckgen CLK_TOP_PEXTP_P3_SEL>;
+				 <&infracfg CLK_INFRA_133M_PCIE_CK_P3>;
 			clock-names = "pl_250m", "tl_26m", "peri_26m",
-				      "top_133m", "pextp_clk";
+				      "top_133m";
 			pinctrl-names = "default";
 			pinctrl-0 = <&pcie3_pins>;
 			#interrupt-cells = <1>;
@@ -1084,10 +1082,9 @@
 			clocks = <&infracfg CLK_INFRA_PCIE_PIPE_P0>,
 				 <&infracfg CLK_INFRA_PCIE_GFMUX_TL_P0>,
 				 <&infracfg CLK_INFRA_PCIE_PERI_26M_CK_P0>,
-				 <&infracfg CLK_INFRA_133M_PCIE_CK_P0>,
-				 <&topckgen CLK_TOP_PEXTP_P0_SEL>;
+				 <&infracfg CLK_INFRA_133M_PCIE_CK_P0>;
 			clock-names = "pl_250m", "tl_26m", "peri_26m",
-				      "top_133m", "pextp_clk";
+				      "top_133m";
 			pinctrl-names = "default";
 			pinctrl-0 = <&pcie0_pins>;
 			#interrupt-cells = <1>;
@@ -1124,10 +1121,9 @@
 			clocks = <&infracfg CLK_INFRA_PCIE_PIPE_P1>,
 				 <&infracfg CLK_INFRA_PCIE_GFMUX_TL_P1>,
 				 <&infracfg CLK_INFRA_PCIE_PERI_26M_CK_P1>,
-				 <&infracfg CLK_INFRA_133M_PCIE_CK_P1>,
-				 <&topckgen CLK_TOP_PEXTP_P1_SEL>;
+				 <&infracfg CLK_INFRA_133M_PCIE_CK_P1>;
 			clock-names = "pl_250m", "tl_26m", "peri_26m",
-				      "top_133m", "pextp_clk";
+				      "top_133m";
 			pinctrl-names = "default";
 			pinctrl-0 = <&pcie1_pins>;
 			#interrupt-cells = <1>;

--- a/drivers/pci/controller/pcie-mediatek-gen3.c	2025-06-28 21:30:09.724001441 +0800
+++ b/drivers/pci/controller/pcie-mediatek-gen3.c	2025-06-29 11:35:51.737000212 +0800
@@ -1219,6 +1219,17 @@
 	return err;
 }
 
+static void mtk_pcie_shutdown(struct platform_device *pdev)
+{
+	struct mtk_gen3_pcie *pcie = platform_get_drvdata(pdev);
+	u32 val;
+
+	val = readl_relaxed(pcie->base + PCIE_RST_CTRL_REG);
+	val |= PCIE_PE_RSTB;           
+	writel_relaxed(val, pcie->base + PCIE_RST_CTRL_REG);
+
+	mdelay(100);
+}
 static int mtk_pcie_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -1466,6 +1477,7 @@
 
 static struct platform_driver mtk_pcie_driver = {
 	.probe = mtk_pcie_probe,
+	.shutdown = mtk_pcie_shutdown,
 	.remove_new = mtk_pcie_remove,
 	.driver = {
 		.name = "mtk-pcie-gen3",
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.c	2025-06-28 00:00:04.327001326 +0800
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.c	2025-06-28 00:07:28.673001538 +0800
@@ -1784,6 +1784,10 @@
 	}
 
 	data |= TX_DMA_SWC_V2 | QID_BITS_V2(info->qid);
+	if(info->ext_ppe) {
+		data &= ~(0xf << TX_DMA_FPORT_SHIFT_V2);
+		data |= 0x3 << TX_DMA_FPORT_SHIFT_V2;
+	}
 	WRITE_ONCE(desc->txd4, data);
 
 	data = 0;
@@ -1793,8 +1797,10 @@
 		/* tx checksum offload */
 		if (info->csum)
 			data |= TX_DMA_CHKSUM_V2;
-		if (mtk_is_netsys_v3_or_greater(eth) && netdev_uses_dsa(dev))
+		if (mtk_is_netsys_v3_or_greater(eth) && netdev_uses_dsa(dev)){
+			if (info->ext_ppe!= 1)
 			data |= TX_DMA_SPTAG_V3;
+			}
 	}
 	WRITE_ONCE(desc->txd5, data);
 
@@ -1831,6 +1837,7 @@
 		.vlan_tci = skb_vlan_tag_get(skb),
 		.first = true,
 		.last = !skb_is_nonlinear(skb),
+		.ext_ppe = HNAT_SKB_CB2(skb)->magic == 0x78681415,
 	};
 	struct netdev_queue *txq;
 	struct mtk_mac *mac = netdev_priv(dev);
@@ -1867,13 +1874,6 @@
 	/* TX SG offload */
 	txd = itxd;
 	txd_pdma = qdma_to_pdma(ring, txd);
-	#if defined(CONFIG_NET_MEDIATEK_HNAT) || defined(CONFIG_NET_MEDIATEK_HNAT_MODULE)
-	if (HNAT_SKB_CB2(skb)->magic == 0x78681415) {
-		txd->txd4 &= ~(0xf << TX_DMA_FPORT_SHIFT_V2);
-		txd->txd4 |= 0x3 << TX_DMA_FPORT_SHIFT_V2;
-	}
-#endif
-
 	for (i = 0; i < skb_shinfo(skb)->nr_frags; i++) {
 		skb_frag_t *frag = &skb_shinfo(skb)->frags[i];
 		unsigned int offset = 0;
@@ -2476,6 +2476,7 @@
 				mac = MTK_GMAC3_ID;
 				break;
 			default:
+				mac = val - 1;
 				break;
 			}
 		} else if (!MTK_HAS_CAPS(eth->soc->caps, MTK_SOC_MT7628) &&
diff -u -r a/drivers/net/ethernet/mediatek/mtk_eth_soc.h b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.h	2025-06-28 00:00:04.325001326 +0800
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.h	2025-06-28 00:02:59.561001409 +0800
@@ -1483,6 +1483,7 @@
 	u8		vlan:1;
 	u8		first:1;
 	u8		last:1;
+	u8		ext_ppe:1;
 };
 
 struct mtk_reg_map {

